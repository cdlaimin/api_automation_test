# Generated by Django 3.2.18 on 2023-04-27 14:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('UserInfo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='用例名称')),
                ('en_name', models.CharField(max_length=1024, verbose_name='英文名称')),
                ('length', models.IntegerField(default=0, verbose_name='API个数')),
                ('tag', models.IntegerField(choices=[(1, '冒烟用例'), (2, '单接口用例'), (3, '集成用例'), (4, '监控脚本')], default=2, verbose_name='用例标签')),
            ],
            options={
                'verbose_name': '用例信息',
                'verbose_name_plural': '用例管理',
            },
        ),
        migrations.CreateModel(
            name='DBConfig',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024, verbose_name='连接名')),
                ('db_type', models.CharField(choices=[('MySQL', 'MySQL'), ('SQLServer', 'SQLServer'), ('MongoDB', 'MongoDB')], max_length=50, verbose_name='数据库类型')),
                ('host', models.GenericIPAddressField(verbose_name='主机')),
                ('port', models.IntegerField(verbose_name='端口号')),
                ('username', models.CharField(max_length=1024, verbose_name='用户名')),
                ('password', models.CharField(max_length=1024, verbose_name='密码')),
            ],
            options={
                'verbose_name': '数据库配置',
                'verbose_name_plural': '数据库管理',
            },
        ),
        migrations.CreateModel(
            name='GroupInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='分组名称')),
                ('en_name', models.CharField(max_length=1024, verbose_name='分组英文名称')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '分组',
                'verbose_name_plural': '分组管理',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='项目名称')),
                ('en_name', models.CharField(max_length=1024, verbose_name='项目英文名')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='项目备注')),
                ('type', models.CharField(choices=[('Web', 'Web'), ('App', 'App')], max_length=50, verbose_name='类型')),
                ('status', models.IntegerField(choices=[(1, '启用'), (2, '禁用'), (3, '删除')], default=1, verbose_name='状态')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(max_length=1024, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目管理',
            },
        ),
        migrations.CreateModel(
            name='Variables',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, verbose_name='键')),
                ('value', models.CharField(max_length=1024, verbose_name='值')),
                ('info', models.TextField(blank=True, null=True, verbose_name='说明')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables_project', to='api_test.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '全局变量',
                'verbose_name_plural': '全局变量管理',
            },
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=200, verbose_name='报告地址')),
                ('task', models.CharField(max_length=1024, verbose_name='任务/Job名称')),
                ('task_no', models.IntegerField(blank=True, null=True, verbose_name='任务id')),
                ('job_no', models.IntegerField(blank=True, null=True, verbose_name='Job_id')),
                ('result', models.FloatField(verbose_name='测试结果')),
                ('receiver', models.TextField(blank=True, null=True, verbose_name='发送人')),
                ('copy', models.TextField(blank=True, null=True, verbose_name='抄送人')),
                ('access_token', models.TextField(blank=True, null=True, verbose_name='钉钉群')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TestReport_project', to='api_test.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '测试报告',
                'verbose_name_plural': '测试报告管理',
            },
        ),
        migrations.CreateModel(
            name='SQLManager',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('times', models.IntegerField(blank=True, default=1, null=True, verbose_name='重试或重复次数')),
                ('SQL_type', models.CharField(choices=[('PUT', '增'), ('DELETE', '删'), ('UPDATE', '改'), ('GET', '查')], max_length=1024, verbose_name='操作类型')),
                ('sql', models.TextField(verbose_name='SQL')),
                ('extract', models.CharField(blank=True, max_length=1024, null=True, verbose_name='关联')),
                ('validate', models.CharField(blank=True, max_length=1024, null=True, verbose_name='断言')),
                ('api_note', models.CharField(blank=True, max_length=1024, null=True, verbose_name='说明')),
                ('DB', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SQL_DB', to='api_test.dbconfig', verbose_name='所属DB')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SQL_project', to='api_test.project', verbose_name='所属项目')),
                ('relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SQL_relation', to='api_test.groupinfo', verbose_name='所属分组')),
            ],
            options={
                'verbose_name': 'SQL',
                'verbose_name_plural': 'SQL管理',
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('permissionType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissionType', to='UserInfo.userjob', verbose_name='职位')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_project', to='api_test.project', verbose_name='所属项目')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '项目成员',
                'verbose_name_plural': '项目成员',
            },
        ),
        migrations.CreateModel(
            name='ProjectDynamic',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50, verbose_name='操作类型')),
                ('operationObject', models.CharField(max_length=50, verbose_name='操作对象')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dynamic_project', to='api_test.project', verbose_name='所属项目')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userName', to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
            ],
            options={
                'verbose_name': '项目动态',
                'verbose_name_plural': '项目动态',
            },
        ),
        migrations.CreateModel(
            name='JenkinsServer',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024, verbose_name='名称')),
                ('url', models.TextField(verbose_name='url')),
                ('username', models.CharField(max_length=1024, verbose_name='用户名')),
                ('password', models.CharField(max_length=1024, verbose_name='密码')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': 'Jenkins服务器',
                'verbose_name_plural': 'Jenkins服务器',
            },
        ),
        migrations.CreateModel(
            name='JenkinsJob',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=128, verbose_name='job名称')),
                ('switch', models.BooleanField(default=True, verbose_name='开关')),
                ('full_url', models.TextField(verbose_name='job地址')),
                ('queue_id', models.IntegerField(blank=True, null=True, verbose_name='构建ID')),
                ('timestamp', models.DateTimeField(blank=True, max_length=128, null=True, verbose_name='上次构建时间')),
                ('status', models.CharField(blank=True, max_length=1024, null=True, verbose_name='上次构建状态')),
                ('case', models.CharField(max_length=1024, verbose_name='执行case')),
                ('next_job', models.TextField(blank=True, null=True, verbose_name='触发远程job')),
                ('email_strategy', models.CharField(choices=[('始终发送', '始终发送'), ('仅失败发送', '仅失败发送'), ('从不发送', '从不发送')], max_length=128, verbose_name='邮箱策略')),
                ('receiver', models.TextField(blank=True, null=True, verbose_name='邮件发送人')),
                ('copy', models.TextField(blank=True, null=True, verbose_name='邮件抄送人')),
                ('DingStrategy', models.CharField(choices=[('始终发送', '始终发送'), ('仅失败发送', '仅失败发送'), ('从不发送', '从不发送')], max_length=128, verbose_name='钉钉策略')),
                ('accessToken', models.TextField(blank=True, null=True, verbose_name='钉钉机器人token')),
                ('jenkins', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.jenkinsserver', verbose_name='jenkins服务器')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '监控job',
                'verbose_name_plural': '监控job',
            },
        ),
        migrations.CreateModel(
            name='HostIP',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='域名')),
                ('key', models.CharField(max_length=100, verbose_name='关联键')),
                ('IP', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('value', models.CharField(default='0.0.0.0', max_length=1024, verbose_name='域名')),
                ('info', models.TextField(blank=True, null=True, verbose_name='说明')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_project', to='api_test.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': 'HOST配置',
                'verbose_name_plural': 'HOST管理',
            },
        ),
        migrations.AddField(
            model_name='groupinfo',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_project', to='api_test.project', verbose_name='所属项目'),
        ),
        migrations.CreateModel(
            name='Debugtalk',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(default='# write you code', verbose_name='python代码')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api_test.project')),
            ],
            options={
                'verbose_name': '驱动库',
            },
        ),
        migrations.AddField(
            model_name='dbconfig',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='db_project', to='api_test.project', verbose_name='所属项目'),
        ),
        migrations.CreateModel(
            name='CaseStep',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='步骤名称')),
                ('config', models.CharField(choices=[('Case', '用例'), ('setUp', '前置'), ('teardown', '后置')], default='Case', max_length=50, verbose_name='配置')),
                ('times', models.IntegerField(blank=True, default=1, null=True, verbose_name='重试或重复次数')),
                ('SQL_type', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=10, null=True, verbose_name='SQL类型')),
                ('type', models.CharField(choices=[('sql', 'sql'), ('api', '接口')], default='api', max_length=50, verbose_name='步骤类型')),
                ('header', models.TextField(blank=True, null=True, verbose_name='请求头')),
                ('body', models.TextField(blank=True, null=True, verbose_name='主体信息')),
                ('sql', models.TextField(blank=True, null=True, verbose_name='SQL')),
                ('extract', models.CharField(blank=True, max_length=1024, null=True, verbose_name='SQL正则提取')),
                ('validate', models.TextField(blank=True, null=True, verbose_name='断言')),
                ('url', models.TextField(null=True, verbose_name='请求地址')),
                ('param_type', models.CharField(blank=True, choices=[('json', 'json'), ('form', 'form'), ('param', 'param'), ('file', 'file')], default='json', max_length=100, null=True, verbose_name='参数格式')),
                ('method', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=10, null=True, verbose_name='请求方式')),
                ('step_note', models.TextField(blank=True, null=True, verbose_name='说明')),
                ('step', models.IntegerField(verbose_name='顺序')),
                ('DB', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='db_step', to='api_test.dbconfig', verbose_name='数据库')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step', to='api_test.case', verbose_name='所属用例')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='host_step', to='api_test.hostip', verbose_name='环境')),
            ],
            options={
                'verbose_name': '用例信息 Step',
                'verbose_name_plural': '用例Step管理',
            },
        ),
        migrations.AddField(
            model_name='case',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_project', to='api_test.project', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='case',
            name='relation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.groupinfo', verbose_name='所属分组'),
        ),
        migrations.CreateModel(
            name='API',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='接口名称')),
                ('header', models.TextField(blank=True, null=True, verbose_name='请求头')),
                ('body', models.TextField(blank=True, null=True, verbose_name='主体信息')),
                ('times', models.IntegerField(blank=True, default=1, null=True, verbose_name='重试或重复次数')),
                ('validate', models.TextField(blank=True, null=True, verbose_name='断言')),
                ('url', models.TextField(verbose_name='请求地址')),
                ('param_type', models.CharField(blank=True, choices=[('json', 'json'), ('form', 'form'), ('param', 'param'), ('file', 'file')], default='json', max_length=100, verbose_name='参数格式')),
                ('method', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=10, verbose_name='请求方式')),
                ('status', models.IntegerField(choices=[(1, '启用'), (2, '禁用'), (3, '删除')], default=1, verbose_name='状态')),
                ('api_note', models.TextField(blank=True, default='test', null=True, verbose_name='接口说明')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_test_api_related', to='api_test.groupinfo', verbose_name='所属分组')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_api', to='api_test.hostip', verbose_name='环境')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_project', to='api_test.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '接口信息',
                'verbose_name_plural': '接口管理',
            },
        ),
    ]
